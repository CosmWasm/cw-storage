version: 2
workflows:
  version: 2
  test:
    jobs:
      - base
      - fmt
      - clippy

jobs:
  base:
    docker:
      - image: rust:1.39
    steps:
      - checkout
      - run:
          name: Install CMAKE
          command: 'apt-get update && apt-get install -y cmake'
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - v4-cargo-cache-base-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Build all targets (including workspaces)
          command: cargo build --locked
      - run:
          name: Run all tests (including workspaces)
          command: cargo test --locked
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-base-{{ arch }}-{{ checksum "Cargo.lock" }}

  fmt:
    docker:
      - image: rust:1.39
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - v4-cargo-cache-fmt-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Add rustfmt component
          command: rustup component add rustfmt
      - run:
          name: Cargo format
          command: cargo fmt
      - run:
          name: Ensure checked-in source code is properly formatted
          command: |
            CHANGES_IN_REPO=$(git status --porcelain)
            if [[ -n "$CHANGES_IN_REPO" ]]; then
              echo "Repository is dirty. Showing 'git status' for debugging now:"
              git status
              exit 1
            fi
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-fmt-{{ arch }}-{{ checksum "Cargo.lock" }}

  clippy:
    docker:
      - image: rust:1.39
    steps:
      - checkout
      - run:
          name: Version information
          command: rustc --version; cargo --version; rustup --version; rustup target list --installed
      - restore_cache:
          keys:
            - v4-cargo-cache-clippy-{{ arch }}-{{ checksum "Cargo.lock" }}
      - run:
          name: Add clippy component
          command: rustup component add clippy
      - run:
          name: Clippy linting
          command: cargo clippy -- -D warnings
      - save_cache:
          paths:
            - /usr/local/cargo/registry
            - target/debug/.fingerprint
            - target/debug/build
            - target/debug/deps
          key: v4-cargo-cache-clippy-{{ arch }}-{{ checksum "Cargo.lock" }}
